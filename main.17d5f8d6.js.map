{"version":3,"sources":["scripts/main.js"],"names":["collection","document","querySelector","list","children","convert","salary","slice","split","join","sortList","arr","sortedList","sort","small","big","dataset","append","getEmployees","map","employee","name","innerText"],"mappings":";AAAA,aAyBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAvBA,IAAMA,EAAaC,SAASC,cAAc,MACpCC,EAAWH,EAAAA,EAAWI,UAEtBC,EAAU,SAACC,GAAW,OAACA,EAAOC,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAE7D,SAASC,EAASC,GACVC,IAAAA,EAAaD,EAAIE,KAAK,SAACC,EAAOC,GAClCV,OAAAA,EAAQU,EAAIC,QAAQV,QAAUD,EAAQS,EAAME,QAAQV,UAGtDN,EAAWiB,OAAXjB,MAAAA,EAAqBY,EAAAA,IAGvB,SAASM,EAAaP,GACbA,OAAAA,EAAIQ,IAAI,SAAAC,GAAQ,OAAA,EAAA,CAEnBC,KAAMD,EAASE,WACZF,EAASJ,WAKlBN,EAASP,GACTe,EAAaf","file":"main.17d5f8d6.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst collection = document.querySelector('ul');\nconst list = [...collection.children];\n\nconst convert = (salary) => +salary.slice(1).split(',').join('');\n\nfunction sortList(arr) {\n  const sortedList = arr.sort((small, big) => (\n    convert(big.dataset.salary) - convert(small.dataset.salary)\n  ));\n\n  collection.append(...sortedList);\n}\n\nfunction getEmployees(arr) {\n  return arr.map(employee => (\n    {\n      name: employee.innerText,\n      ...employee.dataset,\n    }\n  ));\n}\n\nsortList(list);\ngetEmployees(list);\n"]}